     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                  
    14                                  ;Se da un sir S de dublucuvinte.  
    15                                  ;Sa se obtina sirul D format din octetii inferiori ai cuvintelor inferioare din elementele sirului de dublucuvinte,
    16                                  ;care sunt multipli de 7  
    17                                  
    18 00000000 443322114D3C2B1AD4-         s dd 11223344h, 1A2B3C4Dh, 0A1B2C3D4h, 11223377h     ; in memory: 44 | 33 | 22 | 11 | 4D | 3C | 2B | 1A | D4 | C3 | B2 | A1
    18 00000009 C3B2A177332211     
    19                                                                                           ;           s+0  s+1  s+2  s+3  s+4  s+5  s+6  s+7  s+8  s+9  s+10 s+11
    20                                      len_s equ ($-s)/4
    21 00000010 FF<rept>                    d times len_s db -1    ;b1 = D4 C3 
    22                                  
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 FC                              cld
    28 00000001 B904000000                      mov ecx, len_s ;pregatim in ecx lungimea sirului s pentru loop
    29 00000006 BE00000000                      mov esi, 0 ;registru contor pentru parcurgerea sirului s
    30 0000000B BF[10000000]                    mov edi, d ;registru contor pentru parcurgerea sirului rezultat d
    31                                          
    32                                          repeta:
    33 00000010 8A86[00000000]                      mov al, [s + esi]            
    34 00000016 6698                                cbw 
    35 00000018 B307                                mov bl, 7
    36 0000001A F6FB                                idiv bl  ;in al-cat si ah-rest
    37 0000001C 80FC00                              cmp ah, 0
    38 0000001F 7402                                je adauga
    39 00000021 7507                                jne nu_adauga
    40                                                      
    41                                                      adauga:
    42 00000023 8A86[00000000]                                  mov al, [s + esi]
    43 00000029 AA                                              stosb
    44                                              nu_adauga:
    45 0000002A 83C604                                  add esi, 4
    46 0000002D E2E1                            loop repeta
    47                                      
    48                                          ; exit(0)
    49 0000002F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000031 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
