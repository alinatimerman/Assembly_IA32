     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 00000000                 a dd 0
    16 00000004 00000000                 b dd 0
    17 00000008 00000000                 quotient dd 0
    18 0000000C 00000000                 remainder dd 0
    19                                   
    20 00000010 496E73657274206120-      format_print_insertA db 'Insert a value for a = ', 0
    20 00000019 76616C756520666F72-
    20 00000022 2061203D2000       
    21 00000028 496E73657274206120-      format_print_insertB db 'Insert a value for b = ', 0
    21 00000031 76616C756520666F72-
    21 0000003A 2062203D2000       
    22 00000040 256400                   format_read_number db '%d', 0
    23 00000043 51756F7469656E7420-      format_print_rezultat db 'Quotient = %d, remainder = %d.', 0 
    23 0000004C 3D2025642C2072656D-
    23 00000055 61696E646572203D20-
    23 0000005E 25642E00           
    24                                  
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          
    30 00000000 68[10000000]                    push dword format_print_insertA
    31 00000005 FF15[00000000]                  call[printf]
    32 0000000B 83C404                          add esp, 4*1
    33                                          
    34                                          
    35 0000000E 68[00000000]                    push dword a
    36 00000013 68[40000000]                    push dword format_read_number
    37 00000018 FF15[00000000]                  call[scanf]
    38 0000001E 83C408                          add esp, 4*2
    39                                          
    40                                         
    41 00000021 68[28000000]                    push dword format_print_insertB
    42 00000026 FF15[00000000]                  call[printf]
    43 0000002C 83C404                          add esp, 4*1
    44                                          
    45                                       
    46 0000002F 68[04000000]                    push dword b
    47 00000034 68[40000000]                    push dword format_read_number
    48 00000039 FF15[00000000]                  call[scanf]
    49 0000003F 83C408                          add esp, 4*2        
    50                                          
    51 00000042 A1[00000000]                    mov eax, [a]
    52 00000047 99                              cdq
    53 00000048 8B1D[04000000]                  mov ebx, [b]
    54 0000004E F7FB                            idiv ebx
    55 00000050 A3[08000000]                    mov [quotient], eax
    56 00000055 8915[0C000000]                  mov [remainder], edx
    57                                         
    58 0000005B FF35[0C000000]                  push dword [remainder]
    59 00000061 FF35[08000000]                  push dword [quotient]
    60 00000067 68[43000000]                    push dword format_print_rezultat
    61 0000006C FF15[00000000]                  call [printf]
    62 00000072 83C40C                          add esp, 4*3
    63                                          
    64                                         
    65 00000075 6A00                            push    dword 0 
    66 00000077 FF15[00000000]                  call    [exit]       
    67                                  
